procedure makeSubStateGrammars(thisRule, thisNonTerminal)
#

   local
      mySubGrammar,
      thisVariable,
      newProductionRule,
      newVariable
   mySubGrammar := StateGrammar()
   mySubGrammar.setLeft(thisNonTerminal)
   every thisVariable := thisRule.getVariables() do 
   {
      mySubGrammar.addPossible(thisVariable)
      if thisVariable.getType() == "terminal" then 
      {
         while \newProductionRule := thisVariable.getProductionRule(1) do 
         {
            every newVariable := newProductionRule.getVariables() do 
               makeSubStateGrammars(newProductionRule)
         }
      }
   }
  return mySubGrammar
end