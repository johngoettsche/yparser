procedure p(); 1 := 2 end 
::: missing semicolon or operator 
procedure main() every x do { } } end 
::: too many closing curly braces 
procedure main() y := X(1) z := "a","b" end 
::: missing semicolon or operator 
global 
::: unexpected end of file 
global x y 
::: invalid global declaration 
global x, , y 
::: missing identifier 
procedure p(x) end 
::: missing semicolon 
link procedure p(x) end 
::: link list expected 
invocable procedure p(x) end 
::: invocable list expected 
local x 
::: invalid declaration 
procedure main() a + end 
::: missing or invalid second argument to + 
procedure main() a * end 
::: missing or invalid second argument to * 
procedure main() a ! end 
::: missing or invalid second argument to ! 
procedure () end 
::: procedure name expected 
procedure p(1) end 
::: parameter name expected 
procedure p(x,) end 
::: parameter name expected 
procedure p(x) global x end 
::: semicolon expected 
procedure p(x); global x end 
::: invalid procedure body 
procedure p() ! end 
::: invalid argument to unary ! 
procedure p() c$m || x end 
::: parenthesis is required for method invocation 
procedure p() create end 
::: invalid create expression 
procedure p() { end 
::: invalid compound expression 
procedure main() { := 3 end 
::: assignment missing its left operand 
procedure p() if end 
::: invalid if control expression 
procedure p() case end 
::: invalid case control expression 
procedure p() while end 
::: invalid while control expression 
procedure p() until end 
::: invalid until control expression 
procedure p() every end 
::: invalid every control expression 
procedure p() repeat end 
::: invalid repeat control expression 
link x+ procedure p() end 
::: invalid link declaration 
procedure p write() end 
::: missing parameter list in procedure declaration 
procedure p() local "hello" end 
::: invalid local declaration 
class c() [ end 
::: method expected 
class c() method m(); [ end 
::: unclosed list 
class c() method m(); ["help!" end 
::: unclosed list 
class c() method m(); ["help!" end end 
::: missing operator or closing bracket 
class c() method m();end procedure p();end end 
::: procedure not allowed within a class 
class c() procedure p();end end 
::: procedure not allowed within a class 
procedure p() initial ] end 
::: invalid initial expression 
procedure p() if (1) { hello } end 
::: missing then 
procedure p() if 1) { hello } end 
::: spurious close-parenthesis 
procedure p() write(p() hello end 
::: unclosed parenthesis 
procedure main(); { | x) } end 
::: missing operator or unbalanced parenthesis/bracket 
procedure p() if a.b | ( a.b & c(e) == " t" then { end 
::: unclosed parenthesis 
procedure p() a$b(c[3] { end 
::: unclosed parenthesis 
procedure main() case x of { y: f(); g() } end 
::: malformed case expression 
procedure main() case x of { case y: f() } end 
::: missing "of" in case expression 
procedure main() while x do { x end 
::: missing } somewhere before "end" 
procedure p() initial { if foo then { } end 
::: an "initial" clause is missing } somewhere before "end" 
procedure dbdelete(db, filter) sql(db, "DELETE FROM " || blah blah || filter) end 
::: unclosed literal or missing operator 
procedure p() s || +:= k end 
::: missing operand after || 
procedure p() s || := k end 
::: illegal space inside ||:= 
procedure p() s ||| +:= k end 
::: missing operand after ||| 
procedure p() s ||| := k end 
::: illegal space inside |||:= 
class c() method m(); if x + &1press then p() 
::: bad keyword name or bogus & precedes this token 
class c() method m() if 
::: a ; or n is missing between method header and body 
procedure main() l. := foo end 
::: field name expected 
procedure p(x:["list"]); end 
::: parameter modifier must be a (atomic) literal or a convertor 
class A() method m() write() local g end end 
::: expression expected, or need to move declaration to top of procedure or method 
class C x ) end 
::: left parenthesis expected to start class fieldlist 
class C { x ) end 
::: fieldlist starts with left *parenthesis*, not curly brace! 
procedure main() while ((str:=reads(f4,100))) { write(s) writes(x) } end 
::: missing "do" or some such keyword earlier, or expected a comma or right brace here 
procedure move_characters() every u do { if x then } end 
::: missing then-part 
class C(X Y) 
::: missing comma or unclosed class field arguments 
class C( # hmmm!!!) method check_mobile() end end 
::: missing fieldname or right parenthesis 
class C(foo # hmmm!!!) method check_mobile() end end 
::: unclosed class field arguments 
procedure main(); every read() write(); end 
::: missing operator or "do" keyword 
class A(); end + 
::: global, class, or link expected 
class A(); end method 
::: method declaration outside any class 
class threaddata(id,); end 
::: missing field name 
import x initially 
::: syntax error (32;279) (use -M for assistance with this error) 
invocable x initially 
::: syntax error (35;279) (use -M for assistance with this error) 
link x , initially 
::: syntax error (52;279) (use -M for assistance with this error) 
import x , initially 
::: syntax error (49;279) (use -M for assistance with this error) 
invocable x , initially 
::: syntax error (51;279) (use -M for assistance with this error) 
record x ( initially 
::: syntax error (54;279) (use -M for assistance with this error) 
record x ( x initially 
::: syntax error (152;279) (use -M for assistance with this error) 
procedure x ( ) ; static initially 
::: syntax error (299;279) (use -M for assistance with this error) 
import x , x initially 
::: syntax error (32;279) (use -M for assistance with this error) 
invocable x , x initially 
::: syntax error (35;279) (use -M for assistance with this error) 
class x ( ) abstract initially 
::: syntax error (156;279) (use -M for assistance with this error) 
class x ( ) method initially 
::: syntax error (155;279) (use -M for assistance with this error) 
class x ( ) local initially 
::: syntax error (154;279) (use -M for assistance with this error) 
class x : :: x initially 
::: syntax error (141;279) (use -M for assistance with this error) 
procedure x ( ) ; @ initially 
::: syntax error (92;279) (use -M for assistance with this error) 
procedure x ( ) ; not initially 
::: syntax error (71;279) (use -M for assistance with this error) 
procedure x ( ) ; | initially 
::: syntax error (95;279) (use -M for assistance with this error) 
procedure x ( ) ; || initially 
::: syntax error (96;279) (use -M for assistance with this error) 
procedure x ( ) ; ||| initially 
::: syntax error (97;279) (use -M for assistance with this error) 
procedure x ( ) ; . initially 
::: syntax error (86;279) (use -M for assistance with this error) 
procedure x ( ) ; -- initially 
::: syntax error (85;279) (use -M for assistance with this error) 
procedure x ( ) ; + initially 
::: syntax error (82;279) (use -M for assistance with this error) 
procedure x ( ) ; * initially 
::: syntax error (80;279) (use -M for assistance with this error) 
procedure x ( ) ; / initially 
::: syntax error (87;279) (use -M for assistance with this error) 
procedure x ( ) ; ** initially 
::: syntax error (81;279) (use -M for assistance with this error) 
procedure x ( ) ; ~ initially 
::: syntax error (98;279) (use -M for assistance with this error) 
procedure x ( ) ; - initially 
::: syntax error (84;279) (use -M for assistance with this error) 
procedure x ( ) ; ++ initially 
::: syntax error (83;279) (use -M for assistance with this error) 
procedure x ( ) ; .$ initially 
::: syntax error (107;279) (use -M for assistance with this error) 
procedure x ( ) ; thread initially 
::: syntax error (75;279) (use -M for assistance with this error) 
procedure x ( ) ; critical initially 
::: syntax error (66;279) (use -M for assistance with this error) 
procedure x ( ) ; ( initially 
::: syntax error (102;279) (use -M for assistance with this error) 
procedure x ( ) ; initial 0 initially 
::: syntax error (425;279) (use -M for assistance with this error) 
procedure x ( ) ; local x initially 
::: syntax error (426;279) (use -M for assistance with this error) 
procedure x ( ) ; static x initially 
::: syntax error (427;279) (use -M for assistance with this error) 
class x ( ) method x ( ) ; initially 
::: syntax error (444;279) (use -M for assistance with this error) 
class x ( ) method x initially 
::: syntax error (316;279) (use -M for assistance with this error) 
class x ( + initially 
::: syntax error (308;279) (use -M for assistance with this error) 
class x ( - initially 
::: syntax error (308;279) (use -M for assistance with this error) 
class x : x initially 
::: syntax error (140;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 & initially 
::: syntax error (218;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 <-> initially 
::: syntax error (234;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 <- initially 
::: syntax error (233;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 > initially 
::: syntax error (263;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 < initially 
::: syntax error (256;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 >> initially 
::: syntax error (265;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 << initially 
::: syntax error (257;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 to initially 
::: syntax error (254;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 .| initially 
::: syntax error (255;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 | initially 
::: syntax error (267;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $$ initially 
::: syntax error (273;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 -> initially 
::: syntax error (272;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 -- initially 
::: syntax error (279;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 ++ initially 
::: syntax error (277;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 - initially 
::: syntax error (278;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 ** initially 
::: syntax error (282;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 / initially 
::: syntax error (283;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 % initially 
::: syntax error (280;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 @ initially 
::: syntax error (285;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 { initially 
::: syntax error (295;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 [ initially 
::: syntax error (294;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 ( initially 
::: syntax error (293;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ ; 
::: syntax error (296;371) (use -M for assistance with this error) 
procedure x ( ) ; critical 0 initially 
::: syntax error (166;279) (use -M for assistance with this error) 
procedure x ( ) ; initial 0 ; initially 
::: syntax error (300;279) (use -M for assistance with this error) 
procedure x ( ) ; local x , initially 
::: syntax error (439;279) (use -M for assistance with this error) 
procedure x ( ) ; static x , initially 
::: syntax error (473;279) (use -M for assistance with this error) 
procedure x ( x : 0 initially 
::: syntax error (150;279) (use -M for assistance with this error) 
class x ( ) initially initially 
::: syntax error (442;279) (use -M for assistance with this error) 
class x ( ) method x ( initially 
::: syntax error (441;279) (use -M for assistance with this error) 
class x ( x , initially 
::: syntax error (431;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ initially initially 
::: syntax error (424;279) (use -M for assistance with this error) 
procedure x ( ) ; critical 0 : initially 
::: syntax error (326;279) (use -M for assistance with this error) 
procedure x ( ) ; ( , initially 
::: syntax error (333;279) (use -M for assistance with this error) 
procedure x ( ) ; case 0 of initially 
::: syntax error (325;279) (use -M for assistance with this error) 
procedure x ( ) ; while 0 do initially 
::: syntax error (331;279) (use -M for assistance with this error) 
procedure x ( ) ; until 0 do initially 
::: syntax error (330;279) (use -M for assistance with this error) 
procedure x ( ) ; every 0 do initially 
::: syntax error (327;279) (use -M for assistance with this error) 
procedure x ( ) ; local x , x initially 
::: syntax error (426;279) (use -M for assistance with this error) 
procedure x ( ) ; static x , x initially 
::: syntax error (496;279) (use -M for assistance with this error) 
class x ( ) initially ; initially 
::: syntax error (501;279) (use -M for assistance with this error) 
class x ( ) initially ( initially 
::: syntax error (482;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 to 0 by initially 
::: syntax error (458;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 [ , initially 
::: syntax error (333;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ initially ( initially 
::: syntax error (469;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x ( initially 
::: syntax error (468;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x . ; 
::: syntax error (467;371) (use -M for assistance with this error) 
procedure x ( x : x : 0 initially 
::: syntax error (150;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x . initially initially 
::: syntax error (492;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x . x initially 
::: syntax error (491;279) (use -M for assistance with this error) 
procedure x ( ) ; if 0 then 0 else initially 
::: syntax error (487;279) (use -M for assistance with this error) 
class x ( ) initially ( ) initially 
::: syntax error (512;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x . initially ( initially 
::: syntax error (507;279) (use -M for assistance with this error) 
procedure x ( ) ; 0 $ x . x ( initially 
::: syntax error (506;279) (use -M for assistance with this error) 
class x ( ) initially ( ) ; initially 
::: syntax error (522;279) (use -M for assistance with this error) 
