program
:
decls
EOFX
;
decls
:
;
|
decls
decl
;
decl
:
record
|
proc
|
global
|
link
|
package
|
import
|
invocable
|
cl
;
initiallysection
:
|
INITIALLY
SEMICOL
locals
initial
procbody
|
INITIALLY
LPAREN
arglist
RPAREN
SEMICOL
locals
initial
procbody
;
optsemi
:
;
|
SEMICOL
;
cl
:
classhead
SEMICOL
END
|
classhead
optsemi
clocals
methods
optsemi
initiallysection
END
;
classhead
:
CLASS
IDENT
supers
LPAREN
carglist
RPAREN
;
supers
:
;
|
COLON
IDENT
supers
|
COLON
packageref
supers
;
packageref
:
IDENT
COLONCOLON
IDENT
|
COLONCOLON
IDENT
;
methods
:
;
|
meth
methods
|
global
methods
|
record
methods
;
invocable
:
INVOCABLE
invoclist
;
invoclist
:
invocop
;
|
invoclist
COMMA
invocop
;
invocop
:
IDENT
;
|
STRINGLIT
;
|
STRINGLIT
COLON
INTLIT
;
package
:
PACKAGE
lnkfile
;
import
:
IMPORT
implist
;
link
:
LINK
lnklist
;
lnklist
:
lnkfile
;
|
lnklist
COMMA
lnkfile
;
implist
:
lnkfile
;
|
implist
COMMA
lnkfile
;
lnkfile
:
IDENT
;
|
STRINGLIT
;
global
:
GLOBAL
idlist
;
record
:
RECORD
IDENT
LPAREN
fldlist
RPAREN
;
fldlist
:
;
|
idlist
;
proc
:
prochead
SEMICOL
locals
initial
procbody
END
;
meth
:
methhead
SEMICOL
locals
initial
procbody
END
|
ABSTRACT
methhead
;
prochead
:
PROCEDURE
IDENT
LPAREN
arglist
RPAREN
;
methhead
:
METHOD
IDENT
LPAREN
arglist
RPAREN
;
arglist
:
;
|
parmlist
;
|
parmlist
LBRACK
RBRACK
;
carglist
:
;
|
cparmlist
;
|
cparmlist
LBRACK
RBRACK
;
idlist
:
IDENT
;
|
idlist
COMMA
IDENT
;
varlist
:
IDENT
;
|
IDENT
ASSIGN
expr1
|
varlist
COMMA
IDENT
|
varlist
COMMA
IDENT
ASSIGN
expr1
;
stalist
:
IDENT
;
|
IDENT
ASSIGN
expr1
|
stalist
COMMA
IDENT
|
stalist
COMMA
IDENT
ASSIGN
expr1
;
parmlist
:
arg
;
|
parmlist
COMMA
arg
;
cparmlist
:
carg
;
|
cparmlist
COMMA
carg
;
arg
:
IDENT
;
|
IDENT
COLON
IDENT
;
|
IDENT
COLON
literal
;
|
IDENT
COLON
IDENT
COLON
literal
;
|
IDENT
COLON
AND
IDENT
;
|
IDENT
COLON
IDENT
COLON
AND
IDENT
;
carg
:
priv
arg
;
priv
:
;
|
PLUS
;
|
MINUS
;
clocals
:
;
|
clocals
LOCAL
varlist
optsemi
;
locals
:
;
|
locals
LOCAL
varlist
SEMICOL
;
|
locals
STATIC
stalist
SEMICOL
;
initial
:
;
|
iconINITIAL
expr
SEMICOL
;
procbody
:
;
|
nexpr
SEMICOL
procbody
;
nexpr
:
;
|
expr
;
expr
:
expr1a
;
|
expr
AND
expr1a
;
expr1a
:
expr1
;
|
expr1a
QMARK
expr1
;
expr1
:
expr2a
;
|
expr2a
SWAP
expr1
;
|
expr2a
ASSIGN
expr1
;
|
expr2a
REVSWAP
expr1
;
|
expr2a
REVASSIGN
expr1
;
|
expr2a
AUGCONCAT
expr1
;
|
expr2a
AUGLCONCAT
expr1
;
|
expr2a
AUGDIFF
expr1
;
|
expr2a
AUGUNION
expr1
;
|
expr2a
AUGPLUS
expr1
;
|
expr2a
AUGMINUS
expr1
;
|
expr2a
AUGSTAR
expr1
;
|
expr2a
AUGINTER
expr1
;
|
expr2a
AUGSLASH
expr1
;
|
expr2a
AUGMOD
expr1
;
|
expr2a
AUGCARET
expr1
;
|
expr2a
AUGNMEQ
expr1
;
|
expr2a
AUGEQUIV
expr1
;
|
expr2a
AUGNMGE
expr1
;
|
expr2a
AUGNMGT
expr1
;
|
expr2a
AUGNMLE
expr1
;
|
expr2a
AUGNMLT
expr1
;
|
expr2a
AUGNMNE
expr1
;
|
expr2a
AUGNEQUIV
expr1
;
|
expr2a
AUGSEQ
expr1
;
|
expr2a
AUGSGE
expr1
;
|
expr2a
AUGSGT
expr1
;
|
expr2a
AUGSLE
expr1
;
|
expr2a
AUGSLT
expr1
;
|
expr2a
AUGSNE
expr1
;
|
expr2a
AUGQMARK
expr1
;
|
expr2a
AUGAND
expr1
;
|
expr2a
AUGAT
expr1
;
expr2a
:
expr2
;
|
expr2a
PMATCH
expr2
;
expr2
:
expr3
;
|
expr2
TO
expr3
;
|
expr2
TO
expr3
BY
expr3
;
|
expr2
POR
expr3
;
expr3
:
expr4
;
|
expr4
PAND
expr3
;
|
expr4
BAR
expr3
;
expr4
:
expr5
;
|
expr4
PIMDASSN
expr5
;
|
expr4
PASSNONMATCH
expr5
;
|
expr4
SEQ
expr5
;
|
expr4
SGE
expr5
;
|
expr4
SGT
expr5
;
|
expr4
SLE
expr5
;
|
expr4
SLT
expr5
;
|
expr4
SNE
expr5
;
|
expr4
NMEQ
expr5
;
|
expr4
NMGE
expr5
;
|
expr4
NMGT
expr5
;
|
expr4
NMLE
expr5
;
|
expr4
NMLT
expr5
;
|
expr4
NMNE
expr5
;
|
expr4
EQUIV
expr5
;
|
expr4
NEQUIV
expr5
;
expr5
:
expr6
;
|
expr5
CONCAT
expr6
;
|
expr5
LCONCAT
expr6
;
expr6
:
expr7
;
|
expr6
PLUS
expr7
;
|
expr6
DIFF
expr7
;
|
expr6
UNION
expr7
;
|
expr6
MINUS
expr7
;
expr7
:
expr8
;
|
expr7
STAR
expr8
;
|
expr7
INTER
expr8
;
|
expr7
SLASH
expr8
;
|
expr7
MOD
expr8
;
expr8
:
expr9
;
|
postfixthreadop
;
|
expr9
CARET
expr8
;
postfixthreadop
:
expr9
SND
;
|
expr9
SNDBK
;
|
expr9
RCV
;
|
expr9
RCVBK
;
expr9
:
expr10
;
|
expr9
BACKSLASH
expr10
;
|
expr9
AT
expr10
;
|
expr9
SND
expr10
;
|
expr9
SNDBK
expr10
;
|
expr9
RCV
expr10
;
|
expr9
RCVBK
expr10
;
|
expr9
BANG
expr10
;
expr10
:
expr11
;
|
AT
expr10
;
|
SND
expr10
;
|
SNDBK
expr10
;
|
RCV
expr10
;
|
RCVBK
expr10
;
|
NOT
expr10
;
|
BAR
expr10
;
|
CONCAT
expr10
;
|
LCONCAT
expr10
;
|
DOT
expr10
;
|
BANG
expr10
;
|
DIFF
expr10
;
|
PLUS
expr10
;
|
STAR
expr10
;
|
SLASH
expr10
;
|
CARET
expr10
;
|
INTER
expr10
;
|
TILDE
expr10
;
|
MINUS
expr10
;
|
NMEQ
expr10
;
|
NMNE
expr10
;
|
SEQ
expr10
;
|
SNE
expr10
;
|
EQUIV
expr10
;
|
UNION
expr10
;
|
QMARK
expr10
;
|
NEQUIV
expr10
;
|
BACKSLASH
expr10
;
|
PSETCUR
expr10
;
expr11
:
literal
;
|
section
;
|
return
;
|
if
;
|
case
;
|
while
;
|
until
;
|
every
;
|
repeat
;
|
SND
;
|
SNDBK
;
|
RCV
;
|
RCVBK
;
|
PUNEVAL
;
|
CREATE
expr
;
|
THREAD
expr
;
|
CRITICAL
expr2a
COLON
expr
;
|
IDENT
;
|
NEXT
;
|
BREAK
nexpr
;
|
LPAREN
exprlist
RPAREN
;
|
LBRACE
compound
RBRACE
;
|
LBRACK
caselist
RBRACK
;
|
LBRACK
exprlist
RBRACK
;
|
LBRACK
COLON
expr
COLON
RBRACK
;
|
expr11
LBRACK
exprlist
RBRACK
;
|
expr11
LBRACE
RBRACE
;
|
expr11
LBRACE
pdcolist
RBRACE
;
|
expr11
LPAREN
exprlist
RPAREN
;
|
expr11
DOLLAR
INITIALLY
LPAREN
exprlist
RPAREN
;
|
expr11
DOLLAR
IDENT
LPAREN
exprlist
RPAREN
;
|
expr11
DOLLAR
IDENT
DOT
INITIALLY
LPAREN
exprlist
RPAREN
;
|
expr11
DOLLAR
IDENT
DOT
IDENT
LPAREN
exprlist
RPAREN
;
|
expr11
DOT
IDENT
;
|
packageref
;
|
expr11
DOT
INITIALLY
;
|
AND
FAIL
;
|
AND
IDENT
;
while
:
WHILE
expr
;
|
WHILE
expr
DO
expr
;
until
:
UNTIL
expr
;
|
UNTIL
expr
DO
expr
;
every
:
EVERY
expr
;
|
EVERY
expr
DO
expr
;
repeat
:
REPEAT
expr
;
return
:
FAIL
;
|
RETURN
nexpr
;
|
SUSPEND
nexpr
;
|
SUSPEND
expr
DO
expr
;
if
:
IF
expr
THEN
expr
;
|
IF
expr
THEN
expr
ELSE
expr
;
case
:
CASE
expr
OF
LBRACE
caselist
RBRACE
;
caselist
:
cclause
;
|
caselist
SEMICOL
cclause
;
cclause
:
DEFAULT
COLON
expr
;
|
expr
COLON
expr
;
exprlist
:
nexpr
;
|
exprlist
COMMA
nexpr
;
pdcolist
:
nexpr
;
|
pdcolist
COMMA
nexpr
;
literal
:
INTLIT
;
|
REALLIT
;
|
STRINGLIT
;
|
CSETLIT
;
section
:
expr11
LBRACK
expr
sectop
expr
RBRACK
;
sectop
:
COLON
;
|
PCOLON
;
|
MCOLON
;
compound
:
nexpr
;
|
nexpr
SEMICOL
compound
;
program
:
error
decls
EOFX
;
proc
:
prochead
error
procbody
END
;
expr
:
error
;
